#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Namespace
metadata:
  name: sc-architecture
  labels:
    apps.tanzu.vmware.com/tap-ns: ""
---
apiVersion: kappctrl.k14s.io/v1alpha1
kind: App
metadata:
  name: workloads
  namespace: sc-architecture
  annotations:
    kapp.k14s.io/change-rule.0: "upsert after upserting pkgi"
    kapp.k14s.io/change-rule.1: "delete before deleting pkgi"
spec:
  serviceAccountName: default
  fetch:
    - git:
        url: #@ data.values.developer_namespaces.git.url
        ref: sc-architecture
  template:
  - ytt: {}
  deploy:
  - kapp: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workloads-syncer
  namespace: sc-architecture
rules:
- apiGroups:
  - carto.run
  resources:
  - workloads
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelines
  verbs:
  - '*'
- apiGroups:
  - services.apps.tanzu.vmware.com
  resources:
  - classclaims
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workloads-syncer-default
  namespace: sc-architecture
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: workloads-syncer
subjects:
  - kind: ServiceAccount
    name: default
    namespace: sc-architecture

